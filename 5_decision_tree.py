# -*- coding: utf-8 -*-
"""5_Decision_Tree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bmoK5xbyATwm-9QJR1lU4l1kxOWzWztK

# 01. Import Libraries and Data
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from sklearn.preprocessing import StandardScaler

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor

#  from google.colab import drive
#  drive.mount('/content/gdrive')

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

dataset.head()

"""# 03. Data Splitting"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""# 04. Training Model"""

regressor = DecisionTreeRegressor(random_state = 0)
regressor.fit(X_train, y_train)

"""# 05. Predicting the Test Data"""

regressor.predict(X_test)

"""# 06. Model Evaluation"""

X_grid = np.arange(min(X_train), max(X_train), 0.01)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(X_train, y_train, color = 'red')
plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')
plt.title('Truth or Bluff (Decision Tree Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

regressor.score(X_train,y_train)